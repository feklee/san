:root {
    --node-icon-size: 17px;
    --node-connection-length: 30px;
    --generator-connection-length: calc(2 * var(--node-connection-length) +
                                            var(--node-icon-size));
    --module-connection-length: 20px;
    --stroke-width: 1px;
    --body-width: 421px; /* uneven -> connectors can be perfectly in middle */
    --special-icon-height: 25px;
    --root-node-width: 101px;
    --root-node-padding: 5px;
    --all-node-icon-shadow-width: 3px;
    --line-height: 20px;
    --spacing: 5px;
    --video-height: 160px;
}

* {
    -moz-user-select: none;
    user-select: none;
}

html {
    background: black;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100%;
    overflow: hidden;
}

body {
    width: var(--body-width);
    margin: 15px;
    font: normal normal normal 14px "Source Code Pro";
    line-height: var(--line-height);
    overscroll-behavior: none;
}

button {
    color: inherit;
    background: transparent;
    border: 0;
    padding: 0;
    margin: 0;
    outline: 0;
}

ul.all.nodes {
    margin-bottom: 20px;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: center;
}

ul.all.nodes>li::after {
    content: none;
}

li.node-icon>a {
    display: block;
    width: 100%;
    height: 100%;
}

ul.all.nodes>li.node-icon {
    width: calc(var(--node-icon-size) + 2 * var(--all-node-icon-shadow-width));
    height: calc(var(--node-icon-size) + 2 * var(--all-node-icon-shadow-width));
    box-shadow: inset 0 0 0 var(--all-node-icon-shadow-width) black;
    margin: var(--spacing);
}

ul.all.nodes>li.this.node-icon {
    box-shadow: inset 0 0 0 var(--stroke-width) white,
                inset 0 0 0 var(--all-node-icon-shadow-width) black;
}

ul.all.nodes>li.root.node-icon {
    display: none;
}

.video img {
    display: block;
    width: 100%;
    height: var(--video-height);
    object-fit: cover;
}

.video img.stream {
    margin-top: calc(-1 * var(--video-height));
    filter: grayscale(100%);
}

.graph div {
    display: grid;
}

.graph div>* {
    grid-column: 1;
    grid-row: 1;
}

.graph canvas {
    display: block;
    width: 100%;
    height: 80px;
}

.graph button.show {
    font-size: var(--special-icon-height);
    line-height: var(--special-icon-height);
    width: var(--special-icon-height);
    height: var(--special-icon-height);
    display: none;
}

.hidden.graph canvas {
    visibility: hidden;
}

.hidden.graph button {
    display: block;
    width: 100%;
    height: 100%;
}

.node-icon {
    display: block;
    width: var(--node-icon-size);
    height: var(--node-icon-size);
    border-radius: 50%;
}

ul.output.nodes>li.root.node-icon {
    background: transparent !important;
    text-align: center;
    font-size: var(--special-icon-height);
    line-height: var(--special-icon-height);
    width: var(--root-node-width);
    height: var(--special-icon-height);
    padding-top: var(--root-node-padding);
}

ul.output.nodes>li.root.node-icon::before {
    content: "ðŸ”Š";
}

ul.output.nodes>li.root.node-icon::after {
    margin-top: calc(-1 * (var(--node-connection-length)
                           + var(--special-icon-height)
                           + var(--root-node-padding)));
    margin-left: calc((var(--root-node-width) - var(--node-icon-size)) / 2);
}

ul.nodes {
    display: flex;
    align-items: flex-start;
    justify-content: space-around;
}

ul.nodes>li {
    width: var(--node-icon-size);
}

ul.input.nodes>li.node-icon {
    margin-top: calc(var(--generator-connection-length)
                     - var(--node-icon-size)
                     - var(--node-connection-length));
}

ul.output.nodes>li.node-icon {
    margin-top: var(--node-connection-length);
}

/* Common width, as otherwise vertical line width - oddly - can vary when scaled
   up on high DPI displays. */
ul.nodes>li::after, ul.controls>li::after {
    content: "";
    display: block;
    width: calc(var(--node-icon-size) / 2 - var(--stroke-width) / 2);
    margin-right: calc(var(--node-icon-size) / 2 - var(--stroke-width) / 2);
    border-right: var(--stroke-width) solid white;
}

ul.nodes>li::after {
    height: var(--node-connection-length);
}

ul.output.nodes>li::after {
    margin-top: calc(-1 * var(--node-connection-length)
                     - var(--node-icon-size));
}

ul.nodes>li.generator::after {
    margin-top: 0;
    height: var(--generator-connection-length);
}

ul.controls>li {
    display: flex;
    align-items: flex-start;
    justify-content: center;
    flex-wrap: wrap;
    flex-direction: row;
}

ul.controls>li::after {
    height: var(--module-connection-length);
}

ul.controls>li:last-child::after {
    height: 0;
}

ul.controls>li.video::after, ul.controls>li.graph::after {
    border: 0;
}

ul.controls>li>div {
    box-sizing: border-box;
    padding: 10px;
    width: 100%;
    border: var(--stroke-width) solid white;
    border-radius: var(--spacing);
}

.range-selector>div {
    display: flex;
    justify-content: space-between;
}

.range-selector>div>div {
    display: block;
    flex: 1;
}

.range-selector>div>div:first-child {
    margin-right: var(--spacing);
}

.range-selector span {
    display: inline-block;
    margin: 0 4px;
}

.range-selector span.number {
    width: 70px;
    text-align: right;
}

.range-selector span.unit {
    width: 25px;
}

.range-selector input {
    display: inline-block;
    height: 14px;
    width: 100%;
    margin: 0;
    padding: 4px 0;
    vertical-align: top;
}

input[type=range] {
    background: transparent;
}

input[type=range],
input[type=range]::-webkit-slider-runnable-track,
input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
}

input[type=range]::-moz-range-track {
    background-color: white;
    height: var(--stroke-width);
}

input[type=range]::-webkit-slider-runnable-track {
    background-color: white;
    height: var(--stroke-width);
}

input[type="range"]::-moz-range-thumb {
  position: relative;
  height: 14px;
  width: 14px;
  margin-top: -6px;
  background: black;
  border-radius: 50%;
  border: var(--stroke-width) solid white;
}

input[type="range"]::-webkit-slider-thumb {
  position: relative;
  height: 14px;
  width: 14px;
  margin-top: -6px;
  background: black;
  border-radius: 50%;
  border: var(--stroke-width) solid white;
}

input:focus {
    outline: none;
}

input, label, button {
    cursor: pointer;
}

.radio-selector ul {
    display: flex;
    justify-content: center;
    width: 100%;
}

.radio-selector li {
    display: block;
    flex: 1;
    text-align: center;
    margin-right: var(--spacing);
}

.radio-selector li:last-child {
    margin-right: 0;
}

.radio-selector input {
    width: auto;
    display: none;
}

.radio-selector label>span {
    display: inline-block;
    box-sizing: border-box; /* otherwise item is slightly shifted in flex */
    width: 100%;
    padding: var(--stroke-width);
    border: var(--stroke-width) solid black;
    height: calc(var(--line-height) + 4 * var(--stroke-width));
}

.radio-selector input:checked+span {
    border-color: white;
}

.radio-selector svg {
    display: inline-block;
    height: var(--line-height);
    stroke: white;
    stroke-width: 0.1;
    transform: scaleY(-1);
}

.radio-selector input[value="noise"]+span svg {
    stroke: none;
    fill: white;
}

.toggle-selector input {
    display: none;
}

.toggle-selector span::before {
    display: inline-block;
    content: "Â ";
    width: var(--line-height);
    height: var(--line-height);
    border: var(--stroke-width) solid white;
    text-align: center;
    margin-right: calc(2 * var(--spacing));
}

.toggle-selector input:checked+span::before {
    content: "âœ“";
}

.connection-lost-error::before {
    display: inline-block;
    width: 10px;
    content: "â¦»";
}

.connection-lost-error {
    color: salmon;
}

.hidden.connection-lost-error {
    display: none;
}

button.reconnect {
    text-decoration: underline;
}
